<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <FontFamily x:Key="Font">Motiva Sans</FontFamily>
    <SolidColorBrush x:Key="GlassColor" Color="{Binding Source={x:Static SystemParameters.WindowGlassColor}}" />
    <SolidColorBrush x:Key="BarColor" Color="Gold" />
    <SolidColorBrush x:Key="GlobalColor" Color="#2a4161" />
    <Style x:Key="Caption" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="Silver" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontFamily" Value="{StaticResource Font}"></Setter>
    </Style>
    <Style x:Key="Title" TargetType="TextBlock">
        <Style.Setters>
            <Setter Property="Foreground" Value="#888"/>
            <Setter Property="FontSize" Value="16" />
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="{StaticResource Font}"/>
            <Setter Property="Margin" Value="10,0,0,0" />
        </Style.Setters>
    </Style>
    <Style x:Key="Artist" TargetType="TextBlock">
        <Style.Setters>
            <Setter Property="Foreground" Value="GhostWhite"/>
            <Setter Property="FontSize" Value="16" />
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="{StaticResource Font}"/>
            <Setter Property="Margin" Value="10,0,0,0" />
        </Style.Setters>
    </Style>
    <Style x:Key="Album" TargetType="TextBlock">
        <Style.Setters>
            <Setter Property="Foreground" Value="Silver"/>
            <Setter Property="FontSize" Value="16" />
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="{StaticResource Font}"/>
        </Style.Setters>
    </Style>
    <Style x:Key="Duration" TargetType="TextBlock">
        <Style.Setters>
            <Setter Property="Foreground" Value="GhostWhite"/>
            <Setter Property="FontSize" Value="14" />
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="{StaticResource Font}"/>
        </Style.Setters>
    </Style>
    <Style x:Key="SideMenuBtn" TargetType="Button">
        <Style.Setters>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Opacity" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}"
                                    Opacity="0.9" 
                                    Padding="0"
                                    x:Name="border" 
                                    CornerRadius="2"
                                    BorderThickness="0"
                                    BorderBrush="{TemplateBinding BorderBrush}">
                            <Border.Effect>
                                <DropShadowEffect Direction="290" ShadowDepth="1" Color="Black" BlurRadius="15">
                                    <DropShadowEffect.RenderingBias>
                                        Performance
                                    </DropShadowEffect.RenderingBias>
                                </DropShadowEffect>
                            </Border.Effect>
                            <Border x:Name="clip" RenderTransformOrigin="0.5,0.5" Width="32" Height="32">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>

                                <Border.RenderTransform>
                                    <RotateTransform Angle="0"/>
                                </Border.RenderTransform>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="Transparent" />
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                            </Trigger>
                            <EventTrigger RoutedEvent="Button.MouseEnter">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="clip" 
                             Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" 
                             From="0" To="90"  Duration="00:00:00.300" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Button.MouseLeave">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="clip" 
                             Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" 
                             From="90" To="0"  Duration="00:00:00.300" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#202020" />
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#262626"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#151515"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="SystemButtons" TargetType="{x:Type Button}">
        <Style.Setters>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Width" Value="32" />
            <Setter Property="Height" Value="32" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <Grid>
                                <Image x:Name="btnImage" Source="{DynamicResource Close}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Content" Value="X"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="btnImage" Property="Source" Value="{DynamicResource CloseOver}"/>
                                    <Setter Property="ToolTip" Value="Close"/>
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Content" Value="X"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="btnImage" Property="Source" Value="{DynamicResource Close}"/>
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#111111"/>
                <Setter Property="Foreground" Value="#333333"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="Controls" TargetType="Button">
        <Style.Setters>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="Silver" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="Opacity" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" x:Name="border" Opacity="{TemplateBinding Opacity}" CornerRadius="4" BorderThickness="0" BorderBrush="{TemplateBinding BorderBrush}">
                            <Border.Effect>
                                <DropShadowEffect Direction="290" ShadowDepth="1" Color="#111" BlurRadius="5">
                                    <DropShadowEffect.RenderingBias>
                                        Performance
                                    </DropShadowEffect.RenderingBias>
                                </DropShadowEffect>
                            </Border.Effect>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#222" />
                                <Setter Property="BorderBrush" TargetName="border" Value="Black" />
                                <Setter Property="Opacity" TargetName="border" Value="0.8" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#222"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#202020" />
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#262626"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#151515"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="MenuButton" TargetType="Button">
        <Style.Setters>
            <Setter Property="Background" Value="#111"/>
            <Setter Property="Foreground" Value="GhostWhite"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Margin" Value="3,0" />
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontFamily" Value="{StaticResource Font}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="5" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="5" />
                            </Grid.ColumnDefinitions>
                        
                        <Border  Grid.Column="1"
                            Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    CornerRadius="2">
                            
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="1" x:Name="content"/>
                        </Border>
                        <Border Grid.Column="0" Width="10" Background="#111" 
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="2" Padding="0"/>
                            <Border Grid.Column="2" Width="10" Background="#111" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="content" Property="Opacity" Value="1"/>
                                <Setter Property="Cursor" Value="Hand"/>
                                <Setter Property="Foreground" Value="Gold"/>
                                <Setter Property="Background" Value="#222"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    <Style x:Key="Time" TargetType="TextBlock">
        <Style.Setters>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="GhostWhite" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Opacity" Value="1" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontFamily" Value="{StaticResource Font}" />
        </Style.Setters>
    </Style>
    <Style x:Key="PlayListButtons" TargetType="Button">
        <Style.Setters>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ContentPresenter />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="WhiteSmoke" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="PlayButton" TargetType="{x:Type Image}">
        <Setter Property="Source" Value="{DynamicResource Play}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding PlayingMusic.IsPlay}" Value="True">
                <Setter Property="Source" Value="{DynamicResource Pause}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding PlayingMusic.IsPlay}" Value="False">
                <Setter Property="Source" Value="{DynamicResource Play}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="Favorite" TargetType="Button">
        <Style.Setters>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ContentPresenter />

                    </ControlTemplate>

                </Setter.Value>
            </Setter>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="WhiteSmoke" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#region ScrollBar-->
    <Style x:Key="ScrollBarLineButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Canvas Height="18">
                        <Polygon Fill="{StaticResource GlassColor}" Points="3,15 15,15 9,3"></Polygon>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarLineButtonBottomStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Canvas Height="18">
                        <Polygon Fill="{StaticResource GlassColor}" Points="3,3 9,15 15,3"></Polygon>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border BorderBrush="Transparent"></Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Margin" Value="1,0,1,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle Fill="{StaticResource GlassColor}" Margin="2"></Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18"/>
                <RowDefinition Height="*"/>
                <RowDefinition MaxHeight="18"/>
            </Grid.RowDefinitions>

            <RepeatButton Grid.Row="0" Height="18"
                          Style="{StaticResource ScrollBarLineButtonStyle}"
                          Command="ScrollBar.LineUpCommand" >
            </RepeatButton>
            <Track Name="PART_Track" Grid.Row="1" 
                   IsDirectionReversed="True">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
                    </RepeatButton>
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumbStyle}">
                    </Thumb>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
                    </RepeatButton>
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="3" Height="18"
                          Style="{StaticResource ScrollBarLineButtonBottomStyle}"
                          Command="ScrollBar.LineDownCommand">
            </RepeatButton>
        </Grid>
    </ControlTemplate>
    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Template" Value="{StaticResource VerticalScrollBar}"/>
    </Style>
    <!--#endregion-->
    <Style x:Key="SearchBox"  TargetType="TextBox">
        <Setter Property="Height" Value="40" />
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="{StaticResource Font}"/>
        <Setter Property="Background" Value="#222"/>
        <Setter Property="Foreground" Value="GhostWhite"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0.2" />
        <Setter Property="BorderBrush" Value="#444" />
        <Setter Property="Opacity" Value="0.8" />

        <Style.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0.1" />
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="PlayList" TargetType="{x:Type ListView}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Opacity" Value="1" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="IsSynchronizedWithCurrentItem" Value="True" />
    </Style>
</ResourceDictionary>